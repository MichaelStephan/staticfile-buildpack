worker_processes 1;
daemon off;

error_log <%= ENV["APP_ROOT"] %>/nginx/logs/error.log;
events { worker_connections 1024; }

http {
  log_format cloudfoundry '$http_x_forwarded_for - $http_referer - [$time_local] "$request" $status $body_bytes_sent';
  access_log <%= ENV["APP_ROOT"] %>/nginx/logs/access.log cloudfoundry;
  default_type application/octet-stream;
  include mime.types;
  sendfile on;
  gzip on;
  tcp_nopush on;
  keepalive_timeout 30;

  server {
    listen <%= ENV["PORT"] %>;
    server_name localhost;

    location / {
      root <%= ENV["APP_ROOT"] %>/public;
      index index.html index.htm Default.htm;

      set $cwd_crowd_url '<%= ENV["CROWD_URL"] %>';
      set $cwd_crowd_user '<%= ENV["CROWD_USER"] %>';
      set $cwd_crowd_pwd '<%= ENV["CROWD_PWD"] %>';
      
      set $cwd_authentication_realm '<%= ENV["AUTH_REALM"] %>';
      set $cwd_requires_one_group_out_of 'hybrisABC';
      set $cwd_user 'unknown';
      set $cwd_group 'unknown';
      set $cwd_email 'unknown@unknown.com';
      access_by_lua_file <%= ENV["APP_ROOT"] %>/nginx-crowd-lua/crowd-auth.lua;

      <% if File.exists?(File.join(ENV["APP_ROOT"], "nginx/conf/.enable_directory_index")) %>
      autoindex on;
      <% end %>
      <% if File.exists?(auth_file = File.join(ENV["APP_ROOT"], "nginx/conf/.htpasswd")) %>
      auth_basic "Restricted";                                #For Basic Auth
      auth_basic_user_file <%= auth_file %>;  #For Basic Auth
      <% end %>
    }
  }
}
